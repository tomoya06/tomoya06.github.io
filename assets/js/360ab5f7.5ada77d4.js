"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7536],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return s}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=d(t),s=o,m=u["".concat(l,".").concat(s)]||u[s]||f[s]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function s(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9230:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},Highlight:function(){return f},default:function(){return s}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={tags:["\u5251\u6307offer"],id:"\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",title:"\ud83d\udfe1 \u590d\u6742\u94fe\u8868\u7684\u590d\u5236"},l=void 0,d={unversionedId:"\u5251\u6307offer/\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",id:"\u5251\u6307offer/\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",isDocsHomePage:!1,title:"\ud83d\udfe1 \u590d\u6742\u94fe\u8868\u7684\u590d\u5236",description:"<span",source:"@site/docs/\u5251\u6307offer/offer35_138_\u590d\u6742\u94fe\u8868\u7684\u590d\u5236.mdx",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",permalink:"/docs/\u5251\u6307offer/\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",tags:[{label:"\u5251\u6307offer",permalink:"/docs/tags/\u5251\u6307offer"}],version:"current",frontMatter:{tags:["\u5251\u6307offer"],id:"\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",title:"\ud83d\udfe1 \u590d\u6742\u94fe\u8868\u7684\u590d\u5236"},sidebar:"codezone",previous:{title:"\ud83d\udfe2 I_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/docs/\u5251\u6307offer/I_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},next:{title:"\ud83d\udfe1 \u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570",permalink:"/docs/\u5251\u6307offer/\u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570"}},p=[{value:"\u9898\u89e3 1_\u501f\u52a9\u54c8\u5e0c\u8868.py",id:"\u9898\u89e3-1_\u501f\u52a9\u54c8\u5e0c\u8868py",children:[]},{value:"\u9898\u89e3 2_\u539f\u5730\u590d\u5236.py",id:"\u9898\u89e3-2_\u539f\u5730\u590d\u5236py",children:[]}],f=function(e){var n=e.children,t=e.color;return(0,a.kt)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},u={toc:p,Highlight:f};function s(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,a.kt)(f,{color:"#ffc01e",mdxType:"Highlight"},"\u4e2d\u7b49")))),(0,a.kt)("h2",{id:"\u9898\u89e3-1_\u501f\u52a9\u54c8\u5e0c\u8868py"},"\u9898\u89e3 1_\u501f\u52a9\u54c8\u5e0c\u8868.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"# \n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\nclass Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n        visited = {}\n\n        def copy(nn):\n            if not nn:\n                return None\n            if nn in visited:\n                return visited[nn]\n            else:\n                cpnn = Node(nn.val)\n                visited[nn] = cpnn\n                cpnn.next = copy(nn.next)\n                cpnn.random = copy(nn.random)\n                return cpnn\n\n        return copy(head)\n")),(0,a.kt)("h2",{id:"\u9898\u89e3-2_\u539f\u5730\u590d\u5236py"},"\u9898\u89e3 2_\u539f\u5730\u590d\u5236.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"# \u6d41\u7a0b\u56fe\u53c2\u8003\u8fd9\u7bc7\u9898\u89e3\uff1a\n# https://leetcode-cn.com/problems/fu-za-lian-biao-de-fu-zhi-lcof/solution/jian-zhi-offer-35-fu-za-lian-biao-de-fu-zhi-ha-xi-/\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\nclass Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n            if not head:\n                return None\n            \n            # \u590d\u5236\u94fe\u8868\n            cur = head\n            while cur:\n                cpy = Node(cur.val)\n                cpy.next = cur.next\n                cur.next = cpy\n                cur = cpy.next\n            \n            # \u4e32\u8054random\n            cur = head\n            while cur:\n                if cur.random:\n                    cpy = cur.next\n                    cpy.random = cur.random.next\n                cur = cur.next.next\n            \n            # \u62c6\u5206\u94fe\u8868\n            newHead = head.next\n            cur, cpy = head, head.next\n            while cpy:\n                cur.next = cpy.next\n                cur = cpy.next\n                cpy.next = cur.next if cur else None\n                cpy = cpy.next\n            \n            return newHead\n")))}s.isMDXComponent=!0}}]);
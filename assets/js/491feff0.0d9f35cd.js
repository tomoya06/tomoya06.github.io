"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1526],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return p}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),s=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},l=function(e){var n=s(e.components);return t.createElement(u.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(r),p=o,d=m["".concat(u,".").concat(p)]||m[p]||f[p]||a;return r?t.createElement(d,i(i({ref:n},l),{},{components:r})):t.createElement(d,i({ref:n},l))}));function p(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8109:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},Highlight:function(){return f},default:function(){return p}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={tags:["\u5251\u6307offer"],id:"leetcode_offer45",title:"\ud83d\udfe2 \u5251\u6307 Offer 45. \u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570"},u=void 0,s={unversionedId:"\u5251\u6307offer/leetcode_offer45",id:"\u5251\u6307offer/leetcode_offer45",isDocsHomePage:!1,title:"\ud83d\udfe2 \u5251\u6307 Offer 45. \u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570",description:"<span",source:"@site/docs/\u5251\u6307offer/leetcode_offer45.mdx",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/leetcode_offer45",permalink:"/docs/\u5251\u6307offer/leetcode_offer45",tags:[{label:"\u5251\u6307offer",permalink:"/docs/tags/\u5251\u6307offer"}],version:"current",frontMatter:{tags:["\u5251\u6307offer"],id:"leetcode_offer45",title:"\ud83d\udfe2 \u5251\u6307 Offer 45. \u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570"},sidebar:"codezone",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer 17. \u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570",permalink:"/docs/\u5251\u6307offer/leetcode_offer17"},next:{title:"\ud83d\udfe1 \u5251\u6307 Offer 35. \u590d\u6742\u94fe\u8868\u7684\u590d\u5236",permalink:"/docs/\u5251\u6307offer/leetcode_offer35"}},l=[{value:"\u9898\u89e3 1.js",id:"\u9898\u89e3-1js",children:[]},{value:"\u9898\u89e3 2_\u624b\u5199\u5feb\u6392.py",id:"\u9898\u89e3-2_\u624b\u5199\u5feb\u6392py",children:[]}],f=function(e){var n=e.children,r=e.color;return(0,a.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},m={toc:l,Highlight:f};function p(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,a.kt)(f,{color:"#00b8a3",mdxType:"Highlight"},"\u7b80\u5355")),(0,a.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof/"},"\ud83d\udd17 leetcode")))),(0,a.kt)("h2",{id:"\u9898\u89e3-1js"},"\u9898\u89e3 1.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @return {string}\n */\n var minNumber = function(nums) {\n  return nums.sort((a, b) => {\n      return `${a}${b}` > `${b}${a}` ? 1 : -1\n  }).join('')\n};\n")),(0,a.kt)("h2",{id:"\u9898\u89e3-2_\u624b\u5199\u5feb\u6392py"},"\u9898\u89e3 2_\u624b\u5199\u5feb\u6392.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def minNumber(self, nums: List[int]) -> str:\n        nums = [str(n) for n in nums]\n        def quick_sort(l, r):\n            if l >= r:\n                return\n            m, n = l, r\n            while m<n:\n                while nums[n]+nums[l] >= nums[l]+nums[n] and m<n: n -= 1\n                while nums[m]+nums[l] <= nums[l]+nums[m] and m<n: m += 1\n                nums[m], nums[n] = nums[n], nums[m]\n            nums[m], nums[l] = nums[l], nums[m]\n            quick_sort(l, m-1)\n            quick_sort(m+1, r)\n        \n        quick_sort(0, len(nums)-1)\n        return ''.join(nums)\n")))}p.isMDXComponent=!0}}]);